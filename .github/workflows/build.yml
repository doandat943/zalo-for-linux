name: Build Zalo for Linux

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      zalo_version:
        description: 'Zalo Version (leave empty for latest)'
        required: false
        default: ''
        type: string
      zadark_version:
        description: 'ZaDark Version/Tag/Commit (leave empty for latest)'
        required: false
        default: ''
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Update ZaDark submodule
      run: |
        git submodule update --remote plugins/zadark

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Cache Electron binaries
      uses: actions/cache@v3
      with:
        path: ~/.cache/electron
        key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-electron-
          
    - name: Install Node.js dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Setup and Build
      id: build
      env:
        CI: true
        ZALO_VERSION: ${{ github.event.inputs.zalo_version }}
        ZADARK_VERSION: ${{ github.event.inputs.zadark_version }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        npm run setup
        npm run build
        
    - name: Upload Original AppImage artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build.outputs.original_appimage_name }}
        path: ${{ steps.build.outputs.original_appimage_file }}
        retention-days: 30
        
    - name: Upload ZaDark AppImage artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build.outputs.zadark_appimage_name }}
        path: ${{ steps.build.outputs.zadark_appimage_file }}
        retention-days: 30
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.build.outputs.zalo_version }}
        name: ${{ steps.build.outputs.zalo_version }}
        body: |          
          üéâ **Unofficial Zalo port for Linux systems**
          - Zalo version: **${{ steps.build.outputs.zalo_version }}**

          ## üöÄ How to use
          
          It is recommended to use [Gear Lever](https://github.com/mijorus/gearlever) to manage and integrate the AppImage.

          ```bash
          # Install with Gear Lever (recommended)
          flatpak run it.mijorus.gearlever --integrate "https://github.com/${{ github.repository }}/releases/download/${{ steps.build.outputs.zalo_version }}/${{ steps.build.outputs.zadark_appimage_name }}"

          # --- OR ---

          # Manual download and run
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.build.outputs.zalo_version }}/${{ steps.build.outputs.zadark_appimage_name }}
          chmod +x ${{ steps.build.outputs.zadark_appimage_name }}
          ./${{ steps.build.outputs.zadark_appimage_name }}
          ```

          ## üìã System Requirements
          - Linux x64
          - GLIBC 2.28 or later
          
          ## üêõ Issues & Support
          Please report issues in the [GitHub Issues](https://github.com/${{ github.repository }}/issues) section.

        files: |
          ${{ steps.build.outputs.original_appimage_file }}
          ${{ steps.build.outputs.zadark_appimage_file }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 